<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Mailmind Dashboard</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
    <style>
        @import url('https://fonts.googleapis.com/css2?family=Roboto:wght@500&display=swap');
        @import url('https://fonts.googleapis.com/css2?family=Noto+Sans:ital,wght@0,100..900;1,100..900&family=Outfit:wght@100..900&family=SUSE:wght@100..800&family=Zain:wght@200;300;400;700;800;900&display=swap');
    
        h1 {
          font-family: 'Outfit', sans-serif;
          font-weight: 900;
        }
    
      </style>
</head>
<body class="bg-gradient-to-l from-slate-800 to-slate-950  min-h-screen">
    <div class="container mx-auto p-6">
        <h1 class="text-5xl font-bold mt-12 mb-6 text-white">
            Hey, <%= typeof userName !== 'undefined' ? userName : '' %> ðŸ‘‹
        </h1>
        <p class="mb-6 text-gray-500">Processed and scanned all emails received since your last login: <%= lastLoginDisplay %> âœ…</p>
        
        <div class="mb-6">
            <div class="border-b border-gray-200">
                <ul class="flex flex-wrap -mb-px">
                    <li class="mr-2">
                        <a href="#" class="inline-block p-4 text-blue-600 border-b-2 border-blue-600 rounded-t-lg active" id="current-tab" onclick="switchTab('current')">Current Tasks</a>
                    </li>
                    <li class="mr-2">
                        <a href="#" class="inline-block p-4 text-gray-500 hover:text-gray-600 hover:border-gray-300 rounded-t-lg" id="completed-tab" onclick="switchTab('completed')">Completed Tasks</a>
                    </li>
                </ul>
            </div>
            
            <div id="current-tasks" class="mt-4">
                <ul id="emailList">
                    <% if (typeof currentTasks !== 'undefined' && currentTasks.length > 0) { %>
                        <% currentTasks.forEach(task => { %>
                            <li class="mb-2 p-2 bg-white rounded shadow" id="email-<%= task.id %>">
                                <label class="flex items-center">
                                    <input type="checkbox" class="mr-2 form-checkbox h-5 w-5 text-blue-600" data-email-id="<%= task.id %>"
                                        onchange="updateCheckedEmail(this)">
                                    <span class="text-gray-700"><%= task.subject %></span>
                                </label>
                            </li>
                        <% }); %>
                    <% } else { %>
                        <li class="text-gray-500">Nothing for now!</li>
                    <% } %>
                </ul>
            </div>

            <div id="completed-tasks" class="mt-4 hidden">
                <ul id="completedList">
                    <% if (typeof completedTasks !== 'undefined' && completedTasks.length > 0) { %>
                        <% completedTasks.forEach(task => { %>
                            <li class="mb-2 p-2 bg-white rounded shadow line-through text-gray-500"><%= task.subject %></li>
                        <% }); %>
                    <% } else { %>
                        <li>No completed tasks</li>
                    <% } %>
                </ul>
            </div>
        </div>

        <form action="/logout" method="post" class="mt-6">
            <button type="submit" class="bg-red-500 hover:bg-red-600 text-white font-bold py-2 px-4 rounded">
                Logout
            </button>
        </form>
    </div>

    <script>
        function updateCheckedEmail(checkbox) {
            const emailId = checkbox.dataset.emailId;
            const checked = checkbox.checked;
            axios.post('/check-email', {
                email: '<%= email %>',
                emailId: emailId,
                checked: checked
            })
            .then(() => {
                const emailItem = document.getElementById(`email-${emailId}`);
                const completedList = document.getElementById('completedList');
                if (checked) {
                    emailItem.remove();
                    const newCompletedItem = document.createElement('li');
                    newCompletedItem.className = 'mb-2 p-2 bg-white rounded shadow line-through text-gray-500';
                    newCompletedItem.textContent = emailItem.querySelector('span').textContent;
                    completedList.appendChild(newCompletedItem);
                }
            })
            .catch(error => {
                console.error('Error updating checked email:', error);
                checkbox.checked = !checked; // Revert the checkbox state if there's an error
            });
        }

        function switchTab(tabName) {
            const currentTab = document.getElementById('current-tab');
            const completedTab = document.getElementById('completed-tab');
            const currentTasksDiv = document.getElementById('current-tasks');
            const completedTasksDiv = document.getElementById('completed-tasks');

            if (tabName === 'current') {
                currentTab.classList.add('text-blue-600', 'border-b-2', 'border-blue-600');
                currentTab.classList.remove('text-gray-500');
                completedTab.classList.remove('text-blue-600', 'border-b-2', 'border-blue-600');
                completedTab.classList.add('text-gray-500');
                currentTasksDiv.classList.remove('hidden');
                completedTasksDiv.classList.add('hidden');
            } else {
                completedTab.classList.add('text-blue-600', 'border-b-2', 'border-blue-600');
                completedTab.classList.remove('text-gray-500');
                currentTab.classList.remove('text-blue-600', 'border-b-2', 'border-blue-600');
                currentTab.classList.add('text-gray-500');
                completedTasksDiv.classList.remove('hidden');
                currentTasksDiv.classList.add('hidden');
            }
        }
    </script>
</body>
</html>
